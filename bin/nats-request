#!/usr/bin/env ruby
# Copyright 2010-2018 The NATS Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'optparse'
require 'rubygems'
require 'nats/client'

['TERM', 'INT'].each { |s| trap(s) {  puts; exit! } }

def usage
  puts "Usage: nats-request <subject> <msg> [-s server] [-t] [-r] [-n responses]"; exit
end

args = ARGV.dup
opts_parser = OptionParser.new do |opts|
  opts.on('-s SERVER') { |server| $nats_server = server }
  opts.on('-t','--time') { $show_time = true }
  opts.on('-r','--raw') { $show_raw = true }
  opts.on('-n RESPONSES') { |responses| $responses = Integer(responses) if Integer(responses) > 0 }
  opts.on('--creds CREDS') { |creds| $creds = creds }
end
args = opts_parser.parse!(args)

subject, msg = args
usage unless subject
msg ||= 'Hello World'

def time_prefix
  "[#{Time.now}] " if $show_time
end

def header
  $i=0 unless $i
  "#{time_prefix}[\##{$i+=1}]"
end

def decorate msg
  if $show_raw
    msg
  else
    "#{header} Replied with : '#{msg}'"
  end
end

NATS.on_error { |err| puts "Server Error: #{err}"; exit! }

NATS.start($nats_server, user_credentials: $creds) do
  NATS.request(subject, msg) { |(msg, reply)|
    puts decorate(msg)
    exit! if $responses && ($responses-=1) < 1
  }
end
